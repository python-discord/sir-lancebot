# Conversation starters for Python-related channels.

# python-general
267624335836053506:
    - What's your favorite PEP?
    - What parts of your life has Python automated, if any?
    - Which Python project are you the most proud of making?
    - What made you want to learn Python?
    - When did you start learning Python?
    - What reasons are you learning Python for?
    - Where's the strangest place you've seen Python?
    - How has learning Python changed your life?
    - Is there a package you wish existed but doesn't? What is it?
    - What feature do you think should be added to Python?
    - Has Python helped you in school? If so, how?
    - What was the first thing you created with Python?
    - What is your favorite Python package?
    - What standard library module is really underrated?
    - Have you published any packages on PyPI? If so, what are they?
    - What are you currently working on in Python?
    - What's your favorite script and how has it helped you in day to day activities?
    - When you were first learning, what is something that stumped you?
    - When you were first learning, what is a resource you wish you had?
    - What is something you know now, that you wish you knew when starting out?
    - What is something simple that you still error on today?
    - What do you plan on eventually achieving with Python?
    - Is Python your first programming language? If not, what is it?
    - What's your favourite aspect of Python development? (Backend, frontend, game dev, machine learning, ai, etc.)
    - In what ways has Python Discord helped you with Python?
    - Are you currently using Python professionally, for education, or as a hobby?
    - What is your process when you decide to start a project in Python?
    - Have you ever been unable to finish a Python project? What is it and why?
    - How often do you program in Python?
    - How would you learn a new library if needed to do so?
    - Have you ever worked with a microcontroller or anything physical with Python before?
    - Have you ever tried making your own programming language?
    - Has a recently discovered Python module changed your general use of Python?
    - What is your motivation for programming?
    - What's your favorite Python related book?
    - What's your favorite use of recursion in Python?
    - If you could change one thing in Python, what would it be?
    - Which package do you use the most and why?
    - Which Python feature do you love the most?
    - Do you have any plans for future projects?
    - What modules/libraries do you want to see more projects using?
    - What's the most ambitious thing you've done with Python so far?

# programming-pedagogy
934931964509691966:
    - What is the best way to teach/learn OOP?
    - What benefits are there to teaching programming to students who aren't training to become developers?
    - What are some basic concepts that we need to know before teaching programming to others?
    - What are the most common difficulties/misconceptions students encounter while learning to program?
    - What makes a project a good learning experience for beginners?
    - What can make difficult concepts more fun for students to learn?

# algos-and-data-structs
650401909852864553:
    -

# async-and-concurrency
630504881542791169:
    - Are there any frameworks you wish were async?
    - How have coroutines changed the way you write Python?
    - What is your favorite async library?

# c-extensions
728390945384431688:
    -

# databases
342318764227821568:
    - Where do you get your best data?
    - What is your preferred database and for what use?
    - What is the least safe use of databases you've seen?

# data-science-and-ai
366673247892275221:
    -

# discord-bots
343944376055103488:
    - What unique features does your bot contain, if any?
    - What commands/features are you proud of making?
    - What feature would you be the most interested in making?
    - What feature would you like to see added to the library? What feature in the library do you think is redundant?
    - Do you think there's a way in which Discord could handle bots better?
    - What's one feature you wish more developers had in their bots?

# editors-ides
813178633006350366:
    - What's your current text editor/IDE, and what functionality do you like about it the most when programming in Python?
    - What functionality is your text editor/IDE missing for programming Python?

# esoteric-python
470884583684964352:
    - What's a common part of programming we can make harder?
    - What are the pros and cons of messing with __magic__()?
    - What's your favorite Python hack?
    - What's the weirdest language feature that Python doesn't have, and how can we change that?
    - What is the most esoteric code you've written?

# game-development
660625198390837248:
    - What is your favorite game mechanic?
    - What is your favorite framework and why?
    - What games do you know that were written in Python?
    - What books or tutorials would you recommend for game-development beginners?
    - What made you start developing games?

# media-processing
971142229462777926:
    - Where do you start with media processing? What is a good beginner project for first-timers in media processing?
    - What are some ways you could manipulate media using Python?
    - What is your favorite algorithm for manipulating media with Python?
    - What is the most surprising result you have gotten after manipulating media with Python?
    - What is the worst outcome you have gotten after manipulating media with Python?
    - What is your most advanced media processing related achievement?
    - Do you know any cool tricks or optimizations for manipulating media with Python?
    - Can a computer truly generate and/or understand art?

# microcontrollers
545603026732318730:
    - What is your favorite version of the Raspberry Pi?

# networking
716325106619777044:
    - If you could wish for a library involving networking, what would it be?

# security
366674035876167691:
    - If you could wish for a library involving net-sec, what would it be?

# software-design
782713858615017503:
    -

# tools-and-devops
463035462760792066:
    - What editor would you recommend to a beginner? Why?
    - What editor would you recommend to be the most efficient? Why?
    - How often do you use GitHub Actions and workflows to automate your repositories?
    - What's your favorite app on GitHub?

# type-hinting
891788761371906108:
    -

# unit-testing
463035728335732738:
    -

# unix
491523972836360192:
    - What's your favorite Bash command?
    - What's your most used Bash command?
    - How often do you update your Unix machine?
    - How often do you upgrade on production?
    - What is your least favorite thing about interoperability amongst *NIX operating systems and/or platforms?

# user-interfaces
338993628049571840:
    - What's the most impressive Desktop Application you've made with Python so far?
    - Have you ever made your own GUI? If so, how?
    - Do you perfer Command Line Interfaces (CLI) or Graphic User Interfaces (GUI)?
    - What's your favorite CLI (Command Line Interface) or TUI (Terminal Line Interface)?
    - What's your best GUI project?
    - What the best-looking app you've used?

# web-development
366673702533988363:
    - How has Python helped you in web development?
    - What tools do you use for web development?
    - What is your favorite API library?
    - What do you use for your frontend?
    - What does your stack look like?
    - What's the best-looking website you've visited?
