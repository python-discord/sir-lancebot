name: Build

on:
  workflow_run:
    workflows: ["Lint"]
    branches:
      - main
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push'
    name: Build & Push
    runs-on: ubuntu-latest

    steps:
      # Create a commit SHA-based tag for the container repositories
      - name: Create SHA Container Tag
        id: sha_tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "::set-output name=tag::$tag"

      # Check out the current repository in the `sir-lancebot` subdirectory
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: sir-lancebot

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      # Build and push the container to the GitHub Container
      # Repository. The container will be tagged as "latest"
      # and with the short SHA of the commit.
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: sir-lancebot/
          file: sir-lancebot/Dockerfile
          push: true
          cache-from: type=registry,ref=ghcr.io/python-discord/sir-lancebot:latest
          cache-to: type=inline
          tags: |
            ghcr.io/python-discord/sir-lancebot:latest
            ghcr.io/python-discord/sir-lancebot:${{ steps.sha_tag.outputs.tag }}
          build-args: |
            git_sha=${{ github.sha }}

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Create a commit SHA-based tag for the container repositories
      - name: Create SHA Container Tag
        id: sha_tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "::set-output name=tag::$tag"

      # Check out the private "kubernetes" repository in the `kubernetes`
      # subdirectory using a GitHub Personal Access Token
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: python-discord/kubernetes
          token: ${{ secrets.REPO_TOKEN }}
          path: kubernetes

      - name: Authenticate with Kubernetes
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
              kubernetes/sir-lancebot/deployment.yaml
          images: 'ghcr.io/python-discord/sir-lancebot:${{ steps.sha_tag.outputs.tag }}'
          kubectl-version: 'latest'
